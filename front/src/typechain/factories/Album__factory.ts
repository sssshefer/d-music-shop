/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Album, AlbumInterface } from "../Album";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "contract AlbumTracker",
        name: "_tracker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "title",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506040516106c13803806106c183398101604081905261002e9161009b565b5f849055600161003e8482610205565b50600391909155600480546001600160a01b0319166001600160a01b03909216919091179055506102c49050565b634e487b7160e01b5f52604160045260245ffd5b80516001600160a01b0381168114610096575f80fd5b919050565b5f805f80608085870312156100ae575f80fd5b8451602080870151919550906001600160401b03808211156100ce575f80fd5b818801915088601f8301126100e1575f80fd5b8151818111156100f3576100f361006c565b604051601f8201601f19908116603f0116810190838211818310171561011b5761011b61006c565b816040528281528b86848701011115610132575f80fd5b5f93505b828410156101535784840186015181850187015292850192610136565b5f8684830101528098505050505050506040850151915061017660608601610080565b905092959194509250565b600181811c9082168061019557607f821691505b6020821081036101b357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561020057805f5260205f20601f840160051c810160208510156101de5750805b601f840160051c820191505b818110156101fd575f81556001016101ea565b50505b505050565b81516001600160401b0381111561021e5761021e61006c565b6102328161022c8454610181565b846101b9565b602080601f831160018114610265575f841561024e5750858301515b5f19600386901b1c1916600185901b1785556102bc565b5f85815260208120601f198616915b8281101561029357888601518255948401946001909101908401610274565b50858210156102b057878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6103f0806102d15f395ff3fe608060405260043610610041575f3560e01c80632986c0e5146102015780634a79d50c14610229578063879f9c961461024a578063a035b1fe14610273575f80fd5b366101fd5760025460ff161561009e5760405162461bcd60e51b815260206004820181905260248201527f5468697320616c62756d20697320616c7265616479207075726368617365642160448201526064015b60405180910390fd5b345f54146100ee5760405162461bcd60e51b815260206004820152601d60248201527f576520616363657074206f6e6c792066756c6c207061796d656e7473210000006044820152606401610095565b60045460035460405160248101919091525f916001600160a01b031690349060440160408051601f198184030181529181526020820180516001600160e01b031663800fb83f60e01b179052516101459190610335565b5f6040518083038185875af1925050503d805f811461017f576040519150601f19603f3d011682016040523d82523d5f602084013e610184565b606091505b50509050806101eb5760405162461bcd60e51b815260206004820152602d60248201527f536f7272792c20776520636f756c64206e6f742070726f6365737320796f757260448201526c103a3930b739b0b1ba34b7b71760991b6064820152608401610095565b6002805460ff19166001908117909155005b5f80fd5b34801561020c575f80fd5b5061021660035481565b6040519081526020015b60405180910390f35b348015610234575f80fd5b5061023d610287565b6040516102209190610350565b348015610255575f80fd5b506002546102639060ff1681565b6040519015158152602001610220565b34801561027e575f80fd5b506102165f5481565b6001805461029490610382565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090610382565b801561030b5780601f106102e25761010080835404028352916020019161030b565b820191905f5260205f20905b8154815290600101906020018083116102ee57829003601f168201915b505050505081565b5f5b8381101561032d578181015183820152602001610315565b50505f910152565b5f8251610346818460208701610313565b9190910192915050565b602081525f825180602084015261036e816040850160208701610313565b601f01601f19169190910160400192915050565b600181811c9082168061039657607f821691505b6020821081036103b457634e487b7160e01b5f52602260045260245ffd5b5091905056fea26469706673582212209462a4e06a100068706cbd05db2769e9d3333b8ad6004d32b94ce933b88d7b2d64736f6c63430008180033";

type AlbumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlbumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Album__factory extends ContractFactory {
  constructor(...args: AlbumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _price: BigNumberish,
    _title: string,
    _index: BigNumberish,
    _tracker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _price,
      _title,
      _index,
      _tracker,
      overrides || {}
    );
  }
  override deploy(
    _price: BigNumberish,
    _title: string,
    _index: BigNumberish,
    _tracker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _price,
      _title,
      _index,
      _tracker,
      overrides || {}
    ) as Promise<
      Album & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Album__factory {
    return super.connect(runner) as Album__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlbumInterface {
    return new Interface(_abi) as AlbumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Album {
    return new Contract(address, _abi, runner) as unknown as Album;
  }
}
